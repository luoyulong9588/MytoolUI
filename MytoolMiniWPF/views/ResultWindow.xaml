<Window
    x:Class="MytoolMiniWPF.views.ResultWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:internal="clr-namespace:MaterialDesignThemes.Wpf.Internal;assembly=MaterialDesignThemes.Wpf"
    xmlns:local="clr-namespace:MytoolMiniWPF.views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
    xmlns:xf="clr-namespace:XamlFlair;assembly=XamlFlair.WPF"
    Title="ResultShowWindow"
    Width="600"
    Height="400"
    AllowDrop="True"
    AllowsTransparency="True"
    ShowInTaskbar="False"
    Topmost="True"
    WindowStartupLocation="CenterScreen"
    WindowStyle="None"
    mc:Ignorable="d">
    <Window.Resources>
        <Style x:Key="BtnInfoStyle" TargetType="Button">
            <Setter Property="Width" Value="70" />
            <Setter Property="Height" Value="25" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="#FFE0E0E0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"
                            SnapsToDevicePixels="True">
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="{TemplateBinding Foreground}"
                                Text="{TemplateBinding Content}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FFD1D1D1" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FFBDB8B8" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="BtnClose" TargetType="Button">
            <Setter Property="Width" Value="70" />
            <Setter Property="Height" Value="25" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="WhiteSmoke" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"
                            SnapsToDevicePixels="True">
                            <TextBlock
                                x:Name="txt"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="{TemplateBinding Foreground}"
                                Text="{TemplateBinding Content}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="red" />
                                <Setter Property="Foreground" Value="WhiteSmoke" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="DarkRed" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RichTextBoxStyleCustom" TargetType="{x:Type RichTextBox}">
            <Setter Property="AllowDrop" Value="true" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}" />
            <Setter Property="BorderThickness" Value="0,0,0,0" />
            <Setter Property="CaretBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
            <Setter Property="ContextMenu" Value="{StaticResource MaterialDesignDefaultContextMenu}" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Foreground" Value="{Binding (TextElement.Foreground), RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}}" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="KeyboardNavigation.TabNavigation" Value="Local" />
            <Setter Property="Padding" Value="{x:Static wpf:Constants.TextBoxDefaultPadding}" />
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
            <Setter Property="SelectionBrush" Value="{DynamicResource PrimaryHueLightBrush}" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />

            <Setter Property="Validation.ErrorTemplate" Value="{StaticResource MaterialDesignValidationErrorTemplate}" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="internal:ClearText.HandlesClearCommand" Value="True" />
            <Setter Property="wpf:HintAssist.Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
            <Setter Property="wpf:HintAssist.HelperTextStyle" Value="{StaticResource MaterialDesignHelperTextBlock}" />
            <Setter Property="wpf:TextFieldAssist.CharacterCounterStyle" Value="{StaticResource MaterialDesignCharacterCounterTextBlock}" />
            <Setter Property="wpf:TextFieldAssist.CharacterCounterVisibility" Value="Visible" />
            <Setter Property="wpf:TextFieldAssist.IncludeSpellingSuggestions" Value="{Binding (SpellCheck.IsEnabled), RelativeSource={RelativeSource Self}}" />
            <Setter Property="wpf:TextFieldAssist.TextBoxViewMargin" Value="{x:Static wpf:Constants.DefaultTextBoxViewMargin}" />
            <Setter Property="wpf:TextFieldAssist.UnderlineBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
        </Style>

    </Window.Resources>
    <Window.Template>
        <ControlTemplate TargetType="Window">
            <Border Padding="64" Background="Transparent">
                <Border Background="WhiteSmoke" CornerRadius="5">
                    <Border.Effect>
                        <DropShadowEffect
                            BlurRadius="15"
                            Opacity="0.5"
                            ShadowDepth="1" />
                    </Border.Effect>
                    <ContentPresenter ClipToBounds="True" />
                </Border>
            </Border>
        </ControlTemplate>

    </Window.Template>
    <Grid xf:Animations.Primary="{xf:Animate BasedOn={StaticResource FadeIn}, Duration=500}">
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition />
            <RowDefinition Height="50" />
        </Grid.RowDefinitions>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="40" />
                <ColumnDefinition />
                <ColumnDefinition Width="40" />
            </Grid.ColumnDefinitions>
            <Label
                Grid.Column="1"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Content="结果"
                FontSize="12"
                FontWeight="Bold" />
            <Button
                x:Name="btnClose"
                Grid.Column="2"
                Width="40"
                Height="30"
                Click="btnClose_Click"
                Content="×"
                FontSize="20"
                Style="{StaticResource BtnClose}" />
        </Grid>

        <RichTextBox
            x:Name="richBoxResult"
            Grid.Row="1"
            Background="White"
            BorderThickness="0"
            Style="{StaticResource RichTextBoxStyleCustom}">
            <RichTextBox.Resources>
                <Style TargetType="{x:Type Paragraph}">
                    <Setter Property="Margin" Value="5,0,2,0" />
                </Style>
            </RichTextBox.Resources>
        </RichTextBox>

        <Grid Grid.Row="2" Margin="0,10,5,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="100" />
                <ColumnDefinition Width="100" />
            </Grid.ColumnDefinitions>
            <Button
                x:Name="btnEnsure"
                Grid.Column="2"
                Width="80"
                Height="30"
                Click="btnClose_Click"
                Content="关闭"
                Style="{StaticResource BtnInfoStyle}" />
            <Button
                x:Name="btnCopy"
                Grid.Column="1"
                Width="80"
                Height="30"
                Click="btnCopy_Click"
                Content="复制并关闭"
                Style="{StaticResource BtnInfoStyle}" />
        </Grid>
    </Grid>
</Window>
