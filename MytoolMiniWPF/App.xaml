<Application
    x:Class="MytoolMiniWPF.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:MytoolMiniWPF"
    xmlns:wd="https://github.com/WPFDevelopersOrg/WPFDevelopers"
    
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
               
                    <ResourceDictionary Source="pack://application:,,,/WPFDevelopers;component/Themes/Light.Purple.xaml"/>
                    <!--需要注意 wd:Resources 必须在配色主题后，Theme="Dark" 为黑色皮肤-->
                    <wd:Resources Theme="Light"/>
                    <ResourceDictionary Source="pack://application:,,,/WPFDevelopers;component/Themes/Theme.xaml"/>

                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesign3.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Secondary/MaterialDesignColor.Lime.xaml" />

                <ResourceDictionary Source="Animations.xaml" />

             

            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="CustomToggleButtonWithSliderStyle" TargetType="ToggleButton">
                <!-- 按钮的高度和宽度更小 -->
                <Setter Property="Height" Value="15"/>
                <Setter Property="Width" Value="35"/>
                <Setter Property="BorderBrush" Value="DarkGray"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Cursor" Value="Hand"/>

                <!-- 使用 ControlTemplate 自定义圆角和滑动效果 -->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid x:Name="Root">
                                <!-- 按钮背景 -->
                                <Border x:Name="BackgroundBorder"
                            Background="Gray" 
                                    BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="10">
                                </Border>

                                <!-- 小圆圈滑块 -->
                                <Grid HorizontalAlignment="Left" VerticalAlignment="Center">
                                    <Ellipse x:Name="Thumb"
                                 Width="18" Height="18"  
                                        Fill="White"
                                 Margin="2"
                                   
                                        HorizontalAlignment="Left"
                                 VerticalAlignment="Center"
                                 Stroke="Gray" StrokeThickness="1">
                                        <Ellipse.RenderTransform>
                                         
                                            <TranslateTransform x:Name="ThumbTranslateTransform"/>
                                        </Ellipse.RenderTransform>
                                    </Ellipse>
                                </Grid>

                                <!-- 使用 VisualStateManager 根据 IsChecked 状态进行切换 -->
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <!-- 默认状态 -->
                                        <VisualState x:Name="Normal"/>

                                        <!-- Checked 状态 -->
                                        <VisualState x:Name="Checked">
                                            <Storyboard>
                                                <!-- 背景颜色变化为绿色 -->
                                                <ColorAnimation 
                                        Storyboard.TargetName="BackgroundBorder"
                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                        To="Green" Duration="0:0:0.2"/>

                                                <!-- 小圆圈向右滑动 -->
                                                <DoubleAnimation 
                                        Storyboard.TargetName="ThumbTranslateTransform"
                                        Storyboard.TargetProperty="X"
                                        To="28" 
                                                    Duration="0:0:0.2"/>
                                            </Storyboard>
                                        </VisualState>

                                        <!-- Unchecked 状态 -->
                                        <VisualState x:Name="Unchecked">
                                            <Storyboard>
                                                <!-- 背景颜色变化为灰色 -->
                                                <ColorAnimation 
                                        Storyboard.TargetName="BackgroundBorder"
                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                        To="Gray" Duration="0:0:0.2"/>

                                                <!-- 小圆圈向左滑动 -->
                                                <DoubleAnimation 
                                        Storyboard.TargetName="ThumbTranslateTransform"
                                        Storyboard.TargetProperty="X"
                                        To="0" Duration="0:0:0.2"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>





        </ResourceDictionary>
    </Application.Resources>
</Application>
